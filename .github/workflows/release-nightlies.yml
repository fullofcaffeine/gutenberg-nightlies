name: Gutenberg Nightly Build

on:
  schedule:
    # Runs at 00:00 UTC everyday
    - cron: "0 0 * * *"
  workflow_dispatch:
  repository_dispatch:
    types: [create_release]

jobs:
  build:
    name: Build Release Artifact
    runs-on: ubuntu-latest

    steps:
      - name: Checkout Gutenberg Repo
        uses: actions/checkout@v2
        with:
          repository: WordPress/gutenberg
          ref: refs/heads/trunk

      - name: Get commit hash
        id: get_hash
        run: echo "hash=$(git rev-parse --short HEAD)" >> $GITHUB_OUTPUT

      - name: Get Gutenberg version
        id: get_version
        run: |
          echo "version=$(sed -n '/Version: /p' gutenberg.php | awk '{print $3}')" >> $GITHUB_OUTPUT

      - name: Build version string
        id: build_version_string
        run: |
          echo "nightly_version=vnightly-${{ env.version }}-${{ env.hash }}" >> $GITHUB_OUTPUT

      - name: Set Nightly Version
        run: |
          sed -i "s/Version: .*/Version: ${{ steps.build_version_string.outputs.nightly_version }}/g" gutenberg.php

      - name: Use desired version of Node.js
        uses: actions/setup-node@v2
        with:
          node-version-file: ".nvmrc"
          cache: "npm"

      - name: Build Gutenberg plugin ZIP file
        run: ./bin/build-plugin-zip.sh
        env:
          NO_CHECKS: "true"

      - name: Upload artifact
        uses: actions/upload-artifact@v2
        with:
          name: gutenberg-plugin
          path: ./gutenberg.zip

      - name: Configure Git
        run: |
          git config user.name "GitHub Actions"
          git config user.email "gutenbergnightlies@users.noreply.github.com"

      - name: Checkout repo
        uses: actions/checkout@v2

      - name: Update previous-releases.txt
        run: |
          git config --global user.name "${{ github.actor }}"
          printf "${{ steps.build_version_string.outputs.nightly_version }}\n" >> previous-releases.txt
          git add previous-releases.txt
          git commit -m "Add ${{ steps.build_version_string.outputs.nightly_version }} to previous-releases.txt"
          git push origin HEAD
        env:
          GITHUB_TOKEN: ${{ secrets.GITHUB_TOKEN }}

      - name: Dispatch create release event
        uses: peter-evans/repository-dispatch@v1
        with:
          token: ${{ secrets.GITHUB_TOKEN }}
          repository: ${{ github.repository }}
          event-type: create_release
          client-payload: '{"nightly_version": "${{ steps.build_version_string.outputs.nightly_version  }}"}'

  release:
    name: Create Release
    if: github.event_name == 'repository_dispatch' && github.event.action == 'create_release'
    runs-on: ubuntu-latest

    steps:
      - name: Checkout repo
        uses: actions/checkout@v2

      - name: Download artifact
        uses: actions/download-artifact@v2
        with:
          name: gutenberg-plugin

      - name: Create Release
        id: create_release
        uses: actions/create-release@v1
        env:
          GITHUB_TOKEN: ${{ secrets.GITHUB_TOKEN }}
        with:
          tag_name: ${{ github.event.client_payload.nightly_version }}
          release_name: Gutenberg Nightly ${{ github.event.client_payload.nightly_version }}
          body: Nightly build of the Gutenberg plugin
          draft: false
          prerelease: false

      - name: Upload Release Asset
        id: upload-release-asset
        uses: actions/upload-release-asset@v1
        env:
          GITHUB_TOKEN: ${{ secrets.GITHUB_TOKEN }}
        with:
          upload_url: ${{ steps.create_release.outputs.upload_url }}
          asset_path: ./gutenberg.zip
          asset_name: gutenberg-nightly.zip
          asset_content_type: application/zip
